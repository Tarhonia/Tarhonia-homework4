# Tarhonia Aliaksandr
# Date: 04/04/2025
# Description: Homework 4
# Grodno IT Academy Python 3.13.1

# теперь тесты написаны с использованием библиотеки pytest
# нам нужно ее установить: pip install pytest
# и запустить как обычный файл: pytest test_Homework4.py
# Теперь вы будете знакомы со вторым инструментом для тестирования


#Выведите n-ое число Фибоначчи, используя только временные переменные, циклические операторы и условные операторы. n - вводится.
def fibonacci(n):
     # Обработка случаев, когда n равно 0 или 1
    if n == 0:
        return 0
    elif n == 1:
        return 1
    
    # Инициализация первых двух чисел Фибоначчи
    a, b = 0, 1
    
    # Цикл для вычисления n-го числа Фибоначчи
    for i in range(2, n + 1):
        fib = a + b  # Вычисляем следующее число Фибоначчи
        a = b        # Сдвигаем a на b
        b = fib      # Обновляем b на текущее число Фибоначчи
    
    return fib

# Пример использования
n = int(input("Введите n: "))
result = fibonacci(n)
print(f"{n}-ое число Фибоначчи: {result}")

#Определите, является ли число палиндромом (читается слева направо и справа налево одинаково). Число положительное целое, произвольной длины. Задача требует работать только с числами (без конвертации числа в строку или что-нибудь еще).
def palindrome(n):
    # Если число 0, то оно палиндром
    if n < 0:
        return False  # Поскольку палиндромы обычно определяются для неотрицательных чисел

    # Определяем количество цифр в числе
    temp = n
    digits = 0
    while temp > 0:
        temp //= 10
        digits += 1

    # Сравниваем цифры
    for i in range(digits // 2):
        # Получаем первую и последнюю цифры
        first_digit = (n // (10 ** (digits - 1 - i))) % 10
        last_digit = (n // (10 ** i)) % 10
        
        if first_digit != last_digit:
            return False  # Если цифры не совпадают, число не палиндром

    return True  # Если все цифры совпадают, число палиндром



#Напишите генератор, который возвращает цифры от S до N, но вместо чисел, кратных 3 пишет Fizz, вместо чисел кратный 5 пишет Buzz, а вместо чисел одновременно кратных и 3 и 5 - FizzBuzz.
def fizz_buzz(S,N):
    def fizz_buzz(S, N):
    for i in range(S, N + 1):  # Проходим от S до N включительно
        if i % 3 == 0 and i % 5 == 0:
            yield "FizzBuzz"  # Если кратно 3 и 5
        elif i % 3 == 0:
            yield "Fizz"  # Если кратно 3
        elif i % 5 == 0:
            yield "Buzz"  # Если кратно 5
        else:
            yield i  # Если не кратно ни 3, ни 5, возвращаем число

# Пример использования генератора
for value in fizz_buzz(1, 15):
    print(value)
